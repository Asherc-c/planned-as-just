def pattern_scan(data, pattern):
    pattern_bytes = pattern.split(' ')
    pattern_length = len(pattern_bytes)
    for i in range(len(data) - pattern_length + 1):
        if all(p_b == '??' or d_b == int(p_b, 16) for p_b, d_b in zip(pattern_bytes, data[i:i+pattern_length])):
            return i
    return -1

def patch_code(in_file, out_file, byte_pairs):
    with open(in_file, "rb") as f:
        data = bytearray(f.read())

    for orig, repl in byte_pairs:
        index = pattern_scan(data, orig)
        if index != -1:
            print(f"Found a match for {orig} at index {index}")
            repl_bytes = bytes.fromhex(repl.replace(' ', ''))
            if len(repl_bytes) < len(orig.split(' ')):
                repl_bytes += b'\x00' * (len(orig.split(' ')) - len(repl_bytes))
            data[index:index+len(orig.split(' '))] = repl_bytes
        else:
            print(f"No matches found for {orig}")

    with open(out_file, "wb") as f:
        f.write(data)

byte_sequences = [
    ("40 53 48 83 EC ?? 8B D9 33 C9 E8 ?? ?? ?? ?? 80 3D ?? ?? ?? ?? ?? 75 ?? 8B 0D ?? ?? ?? ?? E8 ?? ?? ?? ?? C6 05 ?? ?? ?? ?? ?? 48 8B 05 ?? ?? ?? ?? 45 33 C0 8B D3 48 8B 88 ?? ?? ?? ?? 48 8B 49 ?? 48 83 C4 ?? 5B E9 ?? ?? ?? ?? CC CC CC CC CC 48 83 EC ?? 33 C9 E8 ?? ?? ?? ?? 80 3D ?? ?? ?? ?? ?? 75 ?? 8B 0D ?? ?? ?? ?? E8 ?? ?? ?? ?? C6 05 ?? ?? ?? ?? ?? 48 8B 05 ?? ?? ?? ?? 33 D2 48 8B 88 ?? ?? ?? ?? 48 8B 49 ?? 48 83 C4 ?? E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC CC CC 40 53 48 83 EC ?? 8B D9 33 C9 E8 ?? ?? ?? ?? 80 3D ?? ?? ?? ?? ?? 75 ?? 8B 0D ?? ?? ?? ?? E8 ?? ?? ?? ?? C6 05 ?? ?? ?? ?? ?? 48 8B 05 ?? ?? ?? ?? 45 33 C0 8B D3 48 8B 88 ?? ?? ?? ?? 48 8B 49 ?? 48 83 C4 ?? 5B E9 ?? ?? ?? ?? CC CC CC CC CC 48 83 EC ?? 33 C9 E8 ?? ?? ?? ?? 80 3D ?? ?? ?? ?? ?? 75 ?? 8B 0D ?? ?? ?? ?? E8 ?? ?? ?? ?? C6 05 ?? ?? ?? ?? ?? 48 8B 05 ?? ?? ?? ?? 33 D2 48 8B 88 ?? ?? ?? ?? 48 8B 49 ?? 48 83 C4 ?? E9 ?? ?? ?? ?? CC CC CC CC CC CC CC CC CC CC CC CC CC 48 83 EC", "48 B8 01 00 00 00 00 00 00 00 C3"),
    ("40 53 48 83 EC ?? 8B D9 33 C9 E8 ?? ?? ?? ?? 80 3D ?? ?? ?? ?? ?? 75 ?? 8B 0D ?? ?? ?? ?? E8 ?? ?? ?? ?? C6 05 ?? ?? ?? ?? ?? 48 8B 05 ?? ?? ?? ?? 45 33 C0 8B D3 48 8B 88 ?? ?? ?? ?? 48 8B 49 ?? 48 83 C4 ?? 5B E9 ?? ?? ?? ?? CC CC CC CC CC 40 55 53", "B8 85 47 DE 63 C3"),
    ("48 83 EC ?? 80 3D ?? ?? ?? ?? ?? 75 ?? 8B 0D ?? ?? ?? ?? E8 ?? ?? ?? ?? C6 05 ?? ?? ?? ?? ?? 48 8B 0D ?? ?? ?? ?? F6 81 ?? ?? ?? ?? ?? 74 ?? 83 B9 ?? ?? ?? ?? ?? 75 ?? E8 ?? ?? ?? ?? 33 C9 E8 ?? ?? ?? ?? 84 C0 0F 85", "48 B8 01 00 00 00 00 00 00 00 C3")
]

input_file = "GameAssembly.dll"
output_file = "GameAssembly_patched.dll"

patch_code(input_file, output_file, byte_sequences)